From 0c3d8ffe445007d7dafe11cbcea415b38e17d6bf Mon Sep 17 00:00:00 2001
From: Brian Behlendorf <behlendorf1@llnl.gov>
Date: Fri, 4 Dec 2020 13:17:45 -0800
Subject: [PATCH] ZTS: Update zfs_share_concurrent_shares.ksh

Occasionally an out of memory error is hit by this test case
when mounting the filesystems.  Try and reduce the likelyhood
of this occurring by reducing the thread count from 100 to 50.
It also has the advantage of slightly speeding up the test.

    cannot mount 'testpool/testfs3/79': Cannot allocate memory
        filesystem successfully created, but not mounted

Signed-off-by: Brian Behlendorf <behlendorf1@llnl.gov>
---
 .../zfs_share/zfs_share_concurrent_shares.ksh        | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/tests/zfs-tests/tests/functional/cli_root/zfs_share/zfs_share_concurrent_shares.ksh b/tests/zfs-tests/tests/functional/cli_root/zfs_share/zfs_share_concurrent_shares.ksh
index bc45820a1ba..762436678dc 100755
--- a/tests/zfs-tests/tests/functional/cli_root/zfs_share/zfs_share_concurrent_shares.ksh
+++ b/tests/zfs-tests/tests/functional/cli_root/zfs_share/zfs_share_concurrent_shares.ksh
@@ -29,7 +29,7 @@
 #
 # DESCRIPTION:
 # Verify that 'zfs set sharenfs=on', 'zfs share', and 'zfs unshare' can
-# run concurrently. The test creates 300 filesystem and 300 threads.
+# run concurrently. The test creates 50 filesystem and 50 threads.
 # Each thread will run through the test strategy in parallel.
 #
 # STRATEGY:
@@ -47,7 +47,7 @@ verify_runnable "global"
 function cleanup
 {
 	wait
-	for fs in $(seq 0 100)
+	for fs in $(seq 0 50)
 	do
 		log_must zfs set sharenfs=off $TESTPOOL/$TESTFS1/$fs
 		log_must zfs set sharenfs=off $TESTPOOL/$TESTFS2/$fs
@@ -79,7 +79,7 @@ function cleanup
 
 function create_filesystems
 {
-	for fs in $(seq 0 100)
+	for fs in $(seq 0 50)
 	do
 		log_must zfs create -p $TESTPOOL/$TESTFS1/$fs
 		log_must zfs create -p $TESTPOOL/$TESTFS2/$fs
@@ -137,7 +137,7 @@ log_onexit cleanup
 create_filesystems
 
 child_pids=()
-for fs in $(seq 0 100)
+for fs in $(seq 0 50)
 do
 	test_share $TESTPOOL/$TESTFS1/$fs &
 	child_pids+=($!)
@@ -158,7 +158,7 @@ log_note "Verify 'zfs share -a' succeeds."
 # Unshare each of the file systems.
 #
 child_pids=()
-for fs in $(seq 0 100)
+for fs in $(seq 0 50)
 do
 	unshare_fs $TESTPOOL/$TESTFS1/$fs &
 	child_pids+=($!)
@@ -181,7 +181,7 @@ log_must zfs share -a
 #
 unset __ZFS_POOL_EXCLUDE
 
-for fs in $(seq 0 100)
+for fs in $(seq 0 50)
 do
 	is_shared $TESTPOOL/$TESTFS1/$fs || \
 	    log_fail "File system $TESTPOOL/$TESTFS1/$fs is not shared"
